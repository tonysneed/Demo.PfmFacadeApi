
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace CppeDb.DataAccess.Models
{
    /// <summary></summary>
    [Table("ScenarioWells")]
    public partial class ScenarioWell
    {

        /// <summary></summary>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public ScenarioWell()
        {
             //this.ProjectCompletionsParameters_ScenarioWell = new HashSet<ProjectCompletionsParameter>();  //FK_ProjectCompletionsParameters_ScenarioWells
             //this.ProjectDrillingParameters_ScenarioWell = new HashSet<ProjectDrillingParameter>();  //FK_ProjectDrillingParameters_ScenarioWells
             //this.ScenarioWellShutIns_ScenarioWell = new HashSet<ScenarioWellShutIn>();  //FK_ScenarioWellShutIns_ScenarioWells
        AfterConstructor();
        }
    
        ///<summary>Provide the actual method AfterConstructor() in a partial class and it will get called as the last point in construction.</summary>
        partial void AfterConstructor();
    
            /// <summary></summary>
            [Key]
            
            
            public int ScenarioWellId { get; set; }
            /// <summary></summary>
            
            
            
            public int ScenarioId { get; set; }
            /// <summary></summary>
            
            
            
            public int? PadId { get; set; }
            /// <summary></summary>
            
            
            
            public int WellId { get; set; }
            /// <summary></summary>
            
            
            
            public string Ssn { get; set; }
            /// <summary></summary>
            
            
            
            public int? DrillOrder { get; set; }
            /// <summary></summary>
            
            
            
            public int? RigId { get; set; }
            /// <summary></summary>
            
            
            
            public string Wellname { get; set; }
            /// <summary></summary>
            
            
            
            public int? TankBatteryId { get; set; }
            /// <summary></summary>
            
            
            
            public int? PadOrder { get; set; }
            /// <summary></summary>
            
            
            
            public int? LateralLength { get; set; }
            /// <summary></summary>
            
            
            
            public DateTime UpdateTStamp { get; set; }
            /// <summary></summary>
            
            
            
            public string UpdateUID { get; set; }
            /// <summary></summary>
            
            
            
            public string TrainAfe { get; set; }
            /// <summary></summary>
            
            
            
            public int? ArtificialLiftTypeId { get; set; }
            /// <summary></summary>
            
            
            
            public int? PreferredArtificialLiftTypeId { get; set; }
            /// <summary></summary>
            
            
            
            public int? BullpenClassificationId { get; set; }
            /// <summary></summary>
            
            
            
            public int? CleanoutMethodId { get; set; }
            /// <summary></summary>
            
            
            
            public bool? BatchProcess { get; set; }
            /// <summary></summary>
            
            
            
            public bool WorkToAdvance { get; set; }
            /// <summary></summary>
            
            
            
            public DateTime? AddedToBullpenTimeStamp { get; set; }
            /// <summary></summary>
            
            
            
            public DateTime? BullpenUpdateTimeStamp { get; set; }
            /// <summary></summary>
            
            
            
            public int? FracGroupId { get; set; }
            /// <summary></summary>
            
            
            
            public int? DrilloutMethodId { get; set; }
            /// <summary></summary>
            
            
            
            public bool JointVentureWell { get; set; }
            /// <summary></summary>
            
            
            
            public int? StageCount { get; set; }
            /// <summary></summary>
            
            
            
            public int? PlugBackTotalDepth { get; set; }
            /// <summary></summary>
            
            
            
            [DecimalPrecision(18, 6)]public decimal? LandingPointTvd { get; set; }
            /// <summary></summary>
            
            
            
            public int? GelWeightId { get; set; }
            /// <summary></summary>
            
            
            
            [DecimalPrecision(6, 4)]public decimal? NetRevenueInterestPercent { get; set; }
            /// <summary></summary>
            
            
            
            [DecimalPrecision(6, 4)]public decimal? OwnershipPercent { get; set; }
            /// <summary></summary>
            
            
            
            public int? BullpenId { get; set; }
            /// <summary></summary>
            
            
            
            public int? BullpenStatusId { get; set; }
            /// <summary></summary>
            
            
            
            public bool IsManuallyIncludedWell { get; set; }
            /// <summary></summary>
            
            
            
            public int DrillDesignId { get; set; }
            /// <summary></summary>
            
            
            
            public int? BatchProcessTypeId { get; set; }
            /// <summary></summary>
            
            
            
            public string SysActionUID { get; set; }
            /// <summary></summary>
            
            
            [DatabaseGenerated(DatabaseGeneratedOption.Computed)]
            public DateTime SysStartTime { get; set; }
            /// <summary></summary>
            
            
            [DatabaseGenerated(DatabaseGeneratedOption.Computed)]
            public DateTime SysEndTime { get; set; }
            /// <summary></summary>
            
            
            
            public DateTime? WalkDate { get; set; }
            /// <summary></summary>
            
            
            
            public int? StageLength { get; set; }
            /// <summary></summary>
            
            
            
            public int? FluidSystemId { get; set; }
            /// <summary></summary>
            
            
            
            [DecimalPrecision(3, 2)]public decimal? LinearGelPct { get; set; }
            /// <summary></summary>
            
            
            
            [DecimalPrecision(3, 2)]public decimal? CrossLinkPct { get; set; }
            /// <summary></summary>
            
            
            
            [DecimalPrecision(3, 2)]public decimal? SlickWaterPct { get; set; }
            /// <summary></summary>
            
            
            
            public int? ClustersPerStage { get; set; }
            /// <summary></summary>
            
            
            
            public int? StimEfficiency1 { get; set; }
            /// <summary></summary>
            
            
            
            public int? StimEfficiency2 { get; set; }
            /// <summary></summary>
            
            
            
            public int? StimEfficiency3 { get; set; }
            /// <summary></summary>
            
            
            
            public int? FluidQuantity { get; set; }
            /// <summary></summary>
            
            
            
            [DecimalPrecision(12, 3)]public decimal? ProppantPoundsPerFt { get; set; }
            /// <summary></summary>
            
            
            
            public int? ProppantType1ItemId { get; set; }
            /// <summary></summary>
            
            
            
            [DecimalPrecision(3, 2)]public decimal? ProppantType1Percent { get; set; }
            /// <summary></summary>
            
            
            
            public int? ProppantType2ItemId { get; set; }
            /// <summary></summary>
            
            
            
            [DecimalPrecision(3, 2)]public decimal? ProppantType2Percent { get; set; }
            /// <summary></summary>
            
            
            
            public int? ProppantType3ItemId { get; set; }
            /// <summary></summary>
            
            
            
            [DecimalPrecision(3, 2)]public decimal? ProppantType3Percent { get; set; }
            /// <summary></summary>
            
            
            
            public int? ProppantType4ItemId { get; set; }
            /// <summary></summary>
            
            
            
            [DecimalPrecision(3, 2)]public decimal? ProppantType4Percent { get; set; }
            /// <summary></summary>
            
            
            
            public int? ProppantType5ItemId { get; set; }
            /// <summary></summary>
            
            
            
            [DecimalPrecision(3, 2)]public decimal? ProppantType5Percent { get; set; }
            /// <summary></summary>
            
            
            
            public double? WellRiskOil { get; set; }
            /// <summary></summary>
            
            
            
            public double? WellRiskGas { get; set; }
            /// <summary></summary>
            
            
            
            public double? WellRiskWater { get; set; }
            /// <summary></summary>
            
            
            
            public int? CompletionDesignId { get; set; }
            /// <summary></summary>
            
            
            
            public int? DrillGroupId { get; set; }
            /// <summary></summary>
            
            
            
            public bool IsIncluded { get; set; }
            /// <summary></summary>
            
            
            
            public int? TankBatteryAreaId { get; set; }
            /// <summary></summary>
            
            
            
            public int? WaterDisposalSystemAreaId { get; set; }
            /// <summary></summary>
            
            
            
            public bool HasSpudderRig { get; set; }
            /// <summary></summary>
            
            
            
            public int? SpudderRigId { get; set; }
            /// <summary></summary>
            
            
            
            public int? FracOrder { get; set; }
            /// <summary></summary>
            
            
            
            public int? FracPadOrder { get; set; }

        /*
        /// <summary>FK_ProjectCompletionsParameters_ScenarioWells</summary> 
         [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")] 
         public virtual ICollection<ProjectCompletionsParameter> ProjectCompletionsParameters_ScenarioWell { get; set; }
            
        /// <summary>FK_ProjectDrillingParameters_ScenarioWells</summary> 
         [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")] 
         public virtual ICollection<ProjectDrillingParameter> ProjectDrillingParameters_ScenarioWell { get; set; }
            
        /// <summary>FK_ScenarioWellShutIns_ScenarioWells</summary> 
         [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")] 
         public virtual ICollection<ScenarioWellShutIn> ScenarioWellShutIns_ScenarioWell { get; set; }
            
        /// <summary>FK_ScenerioWells_ArtificialLiftType</summary>
        [ForeignKey("ArtificialLiftTypeId")]
        public virtual ArtificialLiftType ArtificialLiftType { get; set; }
        /// <summary>FK_ScenarioWells_BatchProcessTypes</summary>
        [ForeignKey("BatchProcessTypeId")]
        public virtual BatchProcessType BatchProcessType { get; set; }
        /// <summary>FK_ScenerioWells_BullpenClassifications</summary>
        [ForeignKey("BullpenClassificationId")]
        public virtual BullpenClassification BullpenClassification { get; set; }
        /// <summary>FK_ScenarioWells_Bullpens</summary>
        [ForeignKey("BullpenId")]
        public virtual Bullpen Bullpen { get; set; }
        /// <summary>FK_ScenarioWells_BullpenStatuses</summary>
        [ForeignKey("BullpenStatusId")]
        public virtual BullpenStatus BullpenStatus { get; set; }
        /// <summary>FK_ScenerioWells_CleanoutMethodId</summary>
        [ForeignKey("CleanoutMethodId")]
        public virtual CleanoutMethod CleanoutMethod { get; set; }
        /// <summary>FK_ScenarioWells_CompletionDesigns</summary>
        [ForeignKey("CompletionDesignId")]
        public virtual CompletionDesign CompletionDesign { get; set; }
        /// <summary>FK_ScenarioWells_DrillGroups</summary>
        [ForeignKey("DrillGroupId")]
        public virtual DrillGroup DrillGroup { get; set; }
        /// <summary>FK_ScenerioWells_DrilloutMethods</summary>
        [ForeignKey("DrilloutMethodId")]
        public virtual DrilloutMethod DrilloutMethod { get; set; }
        /// <summary>FK_ScenarioWells_FracGroups</summary>
        [ForeignKey("FracGroupId")]
        public virtual FracGroup FracGroup { get; set; }
        /// <summary>FK_ScenerioWells_GelWeights</summary>
        [ForeignKey("GelWeightId")]
        public virtual GelWeight GelWeight { get; set; }
        /// <summary>FK_ScenarioWells_Pads</summary>
        [ForeignKey("PadId")]
        public virtual Pad Pad { get; set; }
        /// <summary>FK_ScenerioWells_Scenarios</summary>
        [ForeignKey("ScenarioId")]
        public virtual Scenario Scenario { get; set; }
        /// <summary>FK_Sceneriowells_TankBatteries</summary>
        [ForeignKey("TankBatteryId")]
        public virtual TankBattery TankBattery { get; set; }
        /// <summary>FK_ScenarioWells_Wells</summary>
        [ForeignKey("WellId")]
        public virtual Well Well { get; set; }
        /// <summary>FK_ScenerioWells_PreferredArtificialLiftTypes</summary>
        [ForeignKey("PreferredArtificialLiftTypeId")]
        public virtual ArtificialLiftType PreferredArtificialLiftType { get; set; }
        /// <summary>FK_ScenarioWells_Items</summary>
        [ForeignKey("ProppantType1ItemId")]
        public virtual Item ProppantType1Item { get; set; }
        /// <summary>FK_ScenarioWells_Items1</summary>
        [ForeignKey("ProppantType2ItemId")]
        public virtual Item ProppantType2Item { get; set; }
        /// <summary>FK_ScenarioWells_Items2</summary>
        [ForeignKey("ProppantType3ItemId")]
        public virtual Item ProppantType3Item { get; set; }
        /// <summary>FK_ScenarioWells_Items3</summary>
        [ForeignKey("ProppantType4ItemId")]
        public virtual Item ProppantType4Item { get; set; }
        /// <summary>FK_ScenarioWells_Items4</summary>
        [ForeignKey("ProppantType5ItemId")]
        public virtual Item ProppantType5Item { get; set; }
        /// <summary>FK_ScenarioWells_Rigs</summary>
        [ForeignKey("SpudderRigId")]
        public virtual Rig Rig { get; set; }
        /// <summary>FK_ScenarioWells_Areas</summary>
        [ForeignKey("WaterDisposalSystemAreaId")]
        public virtual Area Area { get; set; }
        */
    }
}
