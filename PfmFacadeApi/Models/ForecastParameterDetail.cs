
using CppeDb.DataAccess;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace CppeDb.DataAccess.Models
{
    /// <summary></summary>
    [Table("ForecastParameterDetails")]
    public partial class ForecastParameterDetail
    {

        /// <summary></summary>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public ForecastParameterDetail()
        {
        AfterConstructor();
        }
    
        ///<summary>Provide the actual method AfterConstructor() in a partial class and it will get called as the last point in construction.</summary>
        partial void AfterConstructor();
    
            /// <summary></summary>
            [Key]
            
            
            public int ForecastParameterDetailId { get; set; }
            /// <summary></summary>
            
            
            
            public int? ForecastParemeterId { get; set; }
            /// <summary></summary>
            
            
            
            public double? StartDay { get; set; }
            /// <summary></summary>
            
            
            
            public double? EndDay { get; set; }
            /// <summary></summary>
            
            
            
            public int ForecastParamterProductTypeId { get; set; }
            /// <summary></summary>
            
            
            
            public int ForecastSegmentTypeId { get; set; }
            /// <summary></summary>
            
            
            
            public int? ForecastDeclineCurveTypeId { get; set; }
            /// <summary></summary>
            
            
            
            public int? ForecastWellHeaderId { get; set; }
            /// <summary></summary>
            
            
            
            public int? ForecastDurationOuomTypeId { get; set; }
            /// <summary></summary>
            
            
            
            [DecimalPrecision(22, 15)]public decimal? Duration { get; set; }
            /// <summary></summary>
            
            
            
            [DecimalPrecision(22, 15)]public decimal? InitialRate { get; set; }
            /// <summary></summary>
            
            
            
            [DecimalPrecision(22, 15)]public decimal? InitialDecline { get; set; }
            /// <summary></summary>
            
            
            
            [DecimalPrecision(17, 15)]public decimal? NFactor { get; set; }
            /// <summary></summary>
            
            
            
            [DecimalPrecision(22, 15)]public decimal? FinalDecline { get; set; }
            /// <summary></summary>
            
            
            
            [DecimalPrecision(22, 15)]public decimal? FinalRate { get; set; }
            /// <summary></summary>
            
            
            
            [DecimalPrecision(18, 15)]public decimal? MinimumDecline { get; set; }
            /// <summary></summary>
            
            
            
            public int? ForecastRatioCurveTypeId { get; set; }
            /// <summary></summary>
            
            
            
            public int? ForecastRatioFluidTypeId { get; set; }
            /// <summary></summary>
            
            
            
            [DecimalPrecision(22, 15)]public decimal? RatioInitialRate { get; set; }
            /// <summary></summary>
            
            
            
            [DecimalPrecision(22, 15)]public decimal? RatioFinalRate { get; set; }
            /// <summary></summary>
            
            
            
            public int? ForecastRatioVolumeOuomTypeId { get; set; }
            /// <summary></summary>
            
            
            
            public string Remark { get; set; }
            /// <summary></summary>
            
            
            
            public int SegmentNumber { get; set; }
            /// <summary></summary>
            
            
            
            public string SegmentId { get; set; }
            /// <summary></summary>
            
            
            
            public bool IsActive { get; set; }
        /// <summary>FK_ForecastParameters_ForecastDeclineCurveTypes</summary>
        [ForeignKey("ForecastDeclineCurveTypeId")]
        public virtual ForecastDeclineCurveType ForecastDeclineCurveType { get; set; }
        /// <summary>FK_ForecastParameters_ForecastDurationOuomTypes</summary>
        [ForeignKey("ForecastDurationOuomTypeId")]
        public virtual ForecastDurationOuomType ForecastDurationOuomType { get; set; }
        /// <summary>FK_ForecastParameters_ForecastRatioCurveTypes</summary>
        [ForeignKey("ForecastRatioCurveTypeId")]
        public virtual ForecastRatioCurveType ForecastRatioCurveType { get; set; }
        /// <summary>FK_ForecastParameters_ForecastRatioFluidTypes</summary>
        [ForeignKey("ForecastRatioFluidTypeId")]
        public virtual ForecastRatioFluidType ForecastRatioFluidType { get; set; }
        /// <summary>FK_ForecastParameters_ForecastRatioVolumeOuomTypes</summary>
        [ForeignKey("ForecastRatioVolumeOuomTypeId")]
        public virtual ForecastRatioVolumeOuomType ForecastRatioVolumeOuomType { get; set; }
        /// <summary>FK_ForecastParameters_ForecastSegmentTypes</summary>
        [ForeignKey("ForecastSegmentTypeId")]
        public virtual ForecastSegmentType ForecastSegmentType { get; set; }
        /// <summary>FK_ForecastParameters_ForecastProductTypes</summary>
        [ForeignKey("ForecastParamterProductTypeId")]
        public virtual ForecastParemeterProductType ForecastParemeterProductType { get; set; }
        /// <summary>FK_ForecastParameterDetails_ForecastParameter</summary>
        [ForeignKey("ForecastParemeterId")]
        public virtual ForecastParameter ForecastParameter { get; set; }

    }
}
