
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace CppeDb.DataAccess.Models
{
    /// <summary></summary>
    [Table("ForecastHorizontalDetails")]
    public partial class ForecastHorizontalDetail
    {

        /// <summary></summary>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public ForecastHorizontalDetail()
        {
        AfterConstructor();
        }
    
        ///<summary>Provide the actual method AfterConstructor() in a partial class and it will get called as the last point in construction.</summary>
        partial void AfterConstructor();
    
            /// <summary></summary>
            [Key]
            
            
            public int ForecastHorizontalDetailId { get; set; }
            /// <summary></summary>
            
            
            
            public int ForecastHorizontalId { get; set; }
            /// <summary></summary>
            
            
            
            public int WellId { get; set; }
            /// <summary></summary>
            
            
            
            public string Pdp { get; set; }
            /// <summary></summary>
            
            
            
            public int DaysOn { get; set; }
            /// <summary></summary>
            
            
            
            public DateTime? Date { get; set; }
            /// <summary></summary>
            
            
            
            public double UnriskedOil { get; set; }
            /// <summary></summary>
            
            
            
            public double UnriskedGas { get; set; }
            /// <summary></summary>
            
            
            
            public double UnriskedWater { get; set; }
            /// <summary></summary>
            
            
            
            public double OilBopd { get; set; }
            /// <summary></summary>
            
            
            
            public double GasMcfpd { get; set; }
            /// <summary></summary>
            
            
            
            public double DryGasMcfpd { get; set; }
            /// <summary></summary>
            
            
            
            public double NglBpd { get; set; }
            /// <summary></summary>
            
            
            
            public double WaterBpd { get; set; }
            /// <summary></summary>
            
            
            
            public double Gross2StreamBoe { get; set; }
            /// <summary></summary>
            
            
            
            public double Gross3StreamBoe { get; set; }
            /// <summary></summary>
            
            
            
            public double NetOilVolumeBpd { get; set; }
            /// <summary></summary>
            
            
            
            public double NetWetGasVolumeMcfpd { get; set; }
            /// <summary></summary>
            
            
            
            public double NetDryGasVolumeMcfpd { get; set; }
            /// <summary></summary>
            
            
            
            public double NetNglBpd { get; set; }
            /// <summary></summary>
            
            
            
            public double Net2StreamBoe { get; set; }
            /// <summary></summary>
            
            
            
            public double Net3StreamBoe { get; set; }
            /// <summary></summary>
            
            
            
            public double? NetJvOilVolumeBpd { get; set; }
            /// <summary></summary>
            
            
            
            public double? NetJvWetGasVolumeMcfpd { get; set; }
            /// <summary></summary>
            
            
            
            public double? NetJvDryGasVolumeMcfpd { get; set; }
            /// <summary></summary>
            
            
            
            public double? NetJvNglBpd { get; set; }
            /// <summary></summary>
            
            
            
            public double? NetJv2StreamBoe { get; set; }
            /// <summary></summary>
            
            
            
            public double? NetJv3StreamBoe { get; set; }
            /// <summary></summary>
            
            
            
            public int? DivisionId { get; set; }
        /// <summary>FK_ForecastHorizontalDetails_Divisions</summary>
        //[ForeignKey("DivisionId")]
        //public virtual Division Division { get; set; }
        /// <summary>FK_ForecastHorizontalDetails_ForecastHorizontal</summary>
        [ForeignKey("ForecastHorizontalId")]
        public virtual ForecastHorizontal ForecastHorizontal { get; set; }
        /// <summary>FK_ForecastHorizontalDetails_Wells</summary>
        [ForeignKey("WellId")]
        public virtual Well Well { get; set; }

    }
}
