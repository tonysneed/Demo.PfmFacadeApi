
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity.Spatial;
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace CppeDb.DataAccess.Models
{
    /// <summary></summary>
    [Table("Wells")]
    public partial class Well
    {

        /// <summary></summary>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Well()
        {
             //this.ChangeRequestWells_Well = new HashSet<ChangeRequestWell>();  //FK_ChangeRequestWells_Wells
             //this.DrillGroupWells_Well = new HashSet<DrillGroupWell>();  //FK_DrillGroupWells_Wells
             //this.EconomicsCalculationsAnnualValues_Well = new HashSet<EconomicsCalculationsAnnualValue>();  //FK_EconomicsCalculationsAnnualValues_Well
             //this.EconomicsCalculationsDailyValues_Well = new HashSet<EconomicsCalculationsDailyValue>();  //FK_EconomicsCalculationsDailyValues_Well
             //this.ForecastHorizontalDetails_Well = new HashSet<ForecastHorizontalDetail>();  //FK_ForecastHorizontalDetails_Wells
             //this.ForecastParameter_Well = new HashSet<ForecastParameter>();  //FK_ForecastWellHeader_Wells
             //this.FracGroupWells_Well = new HashSet<FracGroupWell>();  //FK_FracGroupWells_Wells
             //this.ProductionGroupWells_Well = new HashSet<ProductionGroupWell>();  //FK_ProductionGroupWells_Wells
             //this.ProjectCompletionsParameters_Well = new HashSet<ProjectCompletionsParameter>();  //FK_ProjectCompletionsParameters_Wells
             //this.ProjectDrillingParameters_Well = new HashSet<ProjectDrillingParameter>();  //FK_ProjectDrillingParameters_Wells
             //this.ScenarioWells_Well = new HashSet<ScenarioWell>();  //FK_ScenarioWells_Wells
             //this.ScheduleActivities_Well = new HashSet<ScheduleActivity>();  //FK_ScheduleActivities_Wells
        AfterConstructor();
        }
    
        ///<summary>Provide the actual method AfterConstructor() in a partial class and it will get called as the last point in construction.</summary>
        partial void AfterConstructor();
    
            /// <summary></summary>
            [Key]
            
            
            public int WellId { get; set; }
            /// <summary></summary>
            
            
            
            public string Ssn { get; set; }
            /// <summary></summary>
            
            
            
            public string Name { get; set; }
            /// <summary></summary>
            
            
            
            public int? WaterDisposalSystemAreaId { get; set; }
            /// <summary></summary>
            
            
            
            public int? PadId { get; set; }
            /// <summary></summary>
            
            
            
            public string StateId { get; set; }
            /// <summary></summary>
            
            
            
            public string SurfaceBlock { get; set; }
            /// <summary></summary>
            
            
            
            public string SurfaceSection { get; set; }
            /// <summary></summary>
            
            
            
            public string BottomholeBlock { get; set; }
            /// <summary></summary>
            
            
            
            public string BottomholeSection { get; set; }
            /// <summary></summary>
            
            
            
            public int? TargetFormationId { get; set; }
            /// <summary></summary>
            
            
            
            public int LateralLength { get; set; }
            /// <summary></summary>
            
            
            
            public int? AreaTeamId { get; set; }
            /// <summary></summary>
            
            
            
            public int? FieldDevelopmentTeamId { get; set; }
            /// <summary></summary>
            
            
            
            public int? TankBatteryAreaId { get; set; }
            /// <summary></summary>
            
            
            
            public int? PioneerWaterManagementAreaId { get; set; }
            /// <summary></summary>
            
            
            
            public int? SaltWaterDisposalFacilityId { get; set; }
            /// <summary></summary>
            
            
            
            public int? TypeCurveAreaId { get; set; }
            /// <summary></summary>
            
            
            
            public int? TypeCurveId { get; set; }
            /// <summary></summary>
            
            
            
            public int? WellStatusId { get; set; }
            /// <summary></summary>
            
            
            
            public int? DrillDesignId { get; set; }
            /// <summary></summary>
            
            
            
            public int? StandardDrillDesignId { get; set; }
            /// <summary></summary>
            
            
            
            public int? CompletionDesignId { get; set; }
            /// <summary></summary>
            
            
            
            public int? StandardCompletionDesignId { get; set; }
            /// <summary></summary>
            
            
            
            public int? StackingStrategyId { get; set; }
            /// <summary></summary>
            
            
            
            public short? CurrentSpacing { get; set; }
            /// <summary></summary>
            
            
            
            public short? WellSpacing { get; set; }
            /// <summary></summary>
            
            
            
            public short? InitialTechnicalReviewSpacing { get; set; }
            /// <summary></summary>
            
            
            
            public DateTime? InitialTechnicalReviewApprovalDate { get; set; }
            /// <summary></summary>
            
            
            
            public bool HasSpacingLock { get; set; }
            /// <summary></summary>
            
            
            
            public bool IsGeoHazard { get; set; }
            /// <summary></summary>
            
            
            
            public short? ChildOffset { get; set; }
            /// <summary></summary>
            
            
            
            public bool IsJointVenture { get; set; }
            /// <summary></summary>
            
            
            
            public bool IsAppraisal { get; set; }
            /// <summary></summary>
            
            
            
            public bool IsAllocated { get; set; }
            /// <summary></summary>
            
            
            
            public int? DrillDirectionId { get; set; }
            /// <summary></summary>
            
            
            
            public short? ApproximateFlowLineLength { get; set; }
            /// <summary></summary>
            
            
            
            public DateTime? MustSpudByObligation { get; set; }
            /// <summary></summary>
            
            
            
            public DateTime? CriticalDate { get; set; }
            /// <summary></summary>
            
            
            
            [DecimalPrecision(6, 4)]public decimal? WorkingInterest_DELETE { get; set; }
            /// <summary></summary>
            
            
            
            [DecimalPrecision(11, 10)]public decimal? NetRevenueInterest_DELETE { get; set; }
            /// <summary></summary>
            
            
            
            public string MeterSep { get; set; }
            /// <summary></summary>
            
            
            
            public short? ContinuousDrillingObligation { get; set; }
            /// <summary></summary>
            
            
            
            public short? LandEstimate { get; set; }
            /// <summary></summary>
            
            
            
            public string LandNotes { get; set; }
            /// <summary></summary>
            
            
            
            public bool ChokeStatus { get; set; }
            /// <summary></summary>
            
            
            
            [DecimalPrecision(4, 3)]public decimal ChokePercent { get; set; }
            /// <summary></summary>
            
            
            
            public short ChokeAllowableDays { get; set; }
            /// <summary></summary>
            
            
            
            public int? PermitTypeId { get; set; }
            /// <summary></summary>
            
            
            
            public int? WellTypeId { get; set; }
            /// <summary></summary>
            
            
            
            public string RegulatoryExceptions { get; set; }
            /// <summary></summary>
            
            
            
            public int? RegulatoryEstimate { get; set; }
            /// <summary></summary>
            
            
            
            public string RegulatoryNotes { get; set; }
            /// <summary></summary>
            
            
            
            public decimal DrillCompCost { get; set; }
            /// <summary></summary>
            
            
            
            [DecimalPrecision(4, 2)]public decimal DirectReturnOnInvestmentAmount { get; set; }
            /// <summary></summary>
            
            
            
            public string PriceDeck { get; set; }
            /// <summary></summary>
            
            
            
            public DateTime? FirstAvailableDate { get; set; }
            /// <summary></summary>
            
            
            
            public DateTime? LeaseObligationsSatisfyingDate { get; set; }
            /// <summary></summary>
            
            
            
            public DateTime? ProvenUndrilledSatisfyingDate { get; set; }
            /// <summary></summary>
            
            
            
            public bool IsScheduleLive { get; set; }
            /// <summary></summary>
            
            
            
            public int PriorityRanking { get; set; }
            /// <summary></summary>
            
            
            
            public int? PriorityRankingCategoryId { get; set; }
            /// <summary></summary>
            
            
            
            public int? RigRampStatusId { get; set; }
            /// <summary></summary>
            
            
            
            public int? WellDesignId { get; set; }
            /// <summary></summary>
            
            
            
            public int? TankBatteryId { get; set; }
            /// <summary></summary>
            
            
            
            public bool? PGauge { get; set; }
            /// <summary></summary>
            
            
            
            public int? BullpenStatusId { get; set; }
            /// <summary></summary>
            
            
            
            public int? DevelopmentAreaId { get; set; }
            /// <summary></summary>
            
            
            
            public int? LeaseAreaId { get; set; }
            /// <summary></summary>
            
            
            
            public DbGeography GeoCenter { get; set; }
            /// <summary></summary>
            
            
            
            public DbGeography Shape { get; set; }
            /// <summary></summary>
            
            
            [DatabaseGenerated(DatabaseGeneratedOption.Computed)]
            public DateTime SysStartTime { get; set; }
            /// <summary></summary>
            
            
            [DatabaseGenerated(DatabaseGeneratedOption.Computed)]
            public DateTime SysEndTime { get; set; }
            /// <summary></summary>
            
            
            
            public int? UserRankingCategoryId { get; set; }
            /// <summary></summary>
            
            
            
            public int? UserRankingValue { get; set; }
            /// <summary></summary>
            
            
            
            public DateTime? FracStart { get; set; }
            /// <summary></summary>
            
            
            
            public DateTime? FracEnd { get; set; }
            /// <summary></summary>
            
            
            
            public short FracOrder { get; set; }
            /// <summary></summary>
            
            
            
            public DateTime? SpudDate { get; set; }
            /// <summary></summary>
            
            
            
            public DateTime? RigReleaseDate { get; set; }
            /// <summary></summary>
            
            
            
            public DateTime? PadRigReleaseDate { get; set; }
            /// <summary></summary>
            
            
            
            public DateTime? PutOnProductionDate { get; set; }
            /// <summary></summary>
            
            
            
            public DateTime? TurnedOvertoProductionDate { get; set; }
            /// <summary></summary>
            
            
            
            public string _TankBatteryName { get; set; }
            /// <summary></summary>
            
            
            
            public short? FracPadOrder { get; set; }
            /// <summary></summary>
            
            
            
            public short? DrillCurrentOrder { get; set; }
            /// <summary></summary>
            
            
            
            public short? DrillOrder { get; set; }
            /// <summary></summary>
            
            
            
            public short? DrillPadOrder { get; set; }
            /// <summary></summary>
            
            
            
            public string _DrillingRig { get; set; }
            /// <summary></summary>
            
            
            
            public int? DrillingRigId { get; set; }
            /// <summary></summary>
            
            
            
            public string PadSequence { get; set; }
            /// <summary></summary>
            
            
            
            public string _TypeCurve { get; set; }
            /// <summary></summary>
            
            
            
            public string CreatedByUID { get; set; }
            /// <summary></summary>
            
            
            
            public string CreatedDate { get; set; }
            /// <summary></summary>
            
            
            
            public string _FracFleet { get; set; }
            /// <summary></summary>
            
            
            
            public int? FracFleetId { get; set; }
            /// <summary></summary>
            
            
            
            public string _AssetTeamCode { get; set; }
            /// <summary></summary>
            
            
            
            public int? AssetTeamId { get; set; }
            /// <summary></summary>
            
            
            
            public System.Int64? OWID { get; set; }
            /// <summary></summary>
            
            
            
            public string WellNumber { get; set; }
            /// <summary></summary>
            
            
            
            public string OperatingBusinessSegment { get; set; }
            /// <summary></summary>
            
            
            
            [DecimalPrecision(11, 10)]public decimal? NetWorkingInterest { get; set; }
            /// <summary></summary>
            
            
            
            [DecimalPrecision(11, 10)]public decimal? GrossWorkingInterest { get; set; }
            /// <summary></summary>
            
            
            
            public string DivisionOrdersPayoutStatusCode { get; set; }
            /// <summary></summary>
            
            
            
            public string DivisionOrdersMajorProductCode { get; set; }
            /// <summary></summary>
            
            
            
            public DateTime? EffectiveStartDate { get; set; }
            /// <summary></summary>
            
            
            
            public DateTime? EffectiveFinishDate { get; set; }
            /// <summary></summary>
            
            
            
            [DecimalPrecision(11, 10)]public decimal? ActualNetRevenueInterest_DELETE { get; set; }
            /// <summary></summary>
            
            
            
            [DecimalPrecision(11, 10)]public decimal? ActualWorkingInterest { get; set; }
            /// <summary></summary>
            
            
            
            [DecimalPrecision(11, 10)]public decimal? ForecastedWorkingInterest { get; set; }
            /// <summary></summary>
            
            
            
            [DecimalPrecision(11, 10)]public decimal? ForecastedNetRevenueInterest { get; set; }
            /// <summary></summary>
            
            
            
            public DbGeography SurfaceHoleLocationPointOfPenetrationCoordinate { get; set; }
            /// <summary></summary>
            
            
            
            public DbGeography FirstTakePointCoordinate { get; set; }
            /// <summary></summary>
            
            
            
            public DbGeography BottomHoleLocationCoordinate { get; set; }
            /// <summary></summary>
            
            
            
            public int? BusinessAssociateId { get; set; }
            /// <summary></summary>
            
            
            
            public string AriesPropertyNumber { get; set; }
            /// <summary></summary>
            
            
            
            public string FieldName_DELETE { get; set; }
            /// <summary></summary>
            
            
            
            public string API { get; set; }
            /// <summary></summary>
            
            
            
            public string API2 { get; set; }
            /// <summary></summary>
            
            
            
            public double? TotalAcresInLease { get; set; }
            /// <summary></summary>
            
            
            
            public double? GroundElevation { get; set; }
            /// <summary></summary>
            
            
            
            public double? KBElevation { get; set; }
            /// <summary></summary>
            
            
            
            public double? WaterBoardDepth { get; set; }
            /// <summary></summary>
            
            
            
            public string PermitLicenseNumber { get; set; }
            /// <summary></summary>
            
            
            
            public string RegulatoryAgency { get; set; }
            /// <summary></summary>
            
            
            
            public string RegulatoryDistrict { get; set; }
            /// <summary></summary>
            
            
            
            [DecimalPrecision(12, 3)]public decimal? SurfaceHoleLocationPointOfPenetrationXCoordinate { get; set; }
            /// <summary></summary>
            
            
            
            [DecimalPrecision(12, 3)]public decimal? SurfaceHoleLocationPointOfPenetrationYCoordinate { get; set; }
            /// <summary></summary>
            
            
            
            [DecimalPrecision(8, 2)]public decimal? SurfaceNSDistance { get; set; }
            /// <summary></summary>
            
            
            
            [DecimalPrecision(8, 2)]public decimal? SurfaceEWDistance { get; set; }
            /// <summary></summary>
            
            
            
            public string SurfaceNSReference { get; set; }
            /// <summary></summary>
            
            
            
            public string SurfaceEWReference { get; set; }
            /// <summary></summary>
            
            
            
            public string LatLongDatum { get; set; }
            /// <summary></summary>
            
            
            
            public string RegulatoryStatus { get; set; }
            /// <summary></summary>
            
            
            
            [DecimalPrecision(12, 3)]public decimal? BottomHoleLocationYCoordinate { get; set; }
            /// <summary></summary>
            
            
            
            [DecimalPrecision(12, 3)]public decimal? BottomHoleLocationXCoordinate { get; set; }
            /// <summary></summary>
            
            
            
            [DecimalPrecision(8, 2)]public decimal? BottomHoleNSDistance { get; set; }
            /// <summary></summary>
            
            
            
            [DecimalPrecision(8, 2)]public decimal? BottomHoleEWDistance { get; set; }
            /// <summary></summary>
            
            
            
            public string BottomHoleNSReference { get; set; }
            /// <summary></summary>
            
            
            
            public string BottomHoleEWReference { get; set; }
            /// <summary></summary>
            
            
            
            public int? WellProfileId { get; set; }
            /// <summary></summary>
            
            
            
            public string Note { get; set; }
            /// <summary></summary>
            
            
            
            public string BottomHoleTownship { get; set; }
            /// <summary></summary>
            
            
            
            public string BottomHoleSurvey { get; set; }
            /// <summary></summary>
            
            
            
            public string WellviewWellType { get; set; }
            /// <summary></summary>
            
            
            
            public string SysActionUID { get; set; }
            /// <summary></summary>
            
            
            
            public int? AssetId { get; set; }
            /// <summary></summary>
            
            
            
            [DecimalPrecision(12, 3)]public decimal? FirstTakePointXCoordinate { get; set; }
            /// <summary></summary>
            
            
            
            [DecimalPrecision(12, 3)]public decimal? FirstTakePointYCoordinate { get; set; }
            /// <summary></summary>
            
            
            
            public bool? IsOffLeasePointOfPenetration { get; set; }
            /// <summary></summary>
            
            
            
            public int? LeftSpacing { get; set; }
            /// <summary></summary>
            
            
            
            public int? RightSpacing { get; set; }
            /// <summary></summary>
            
            
            
            public int? ParentSpacing { get; set; }
            /// <summary></summary>
            
            
            
            public int? CompletionsAreaTeamId { get; set; }
            /// <summary></summary>
            
            
            
            public int? DrillingAreaTeamId { get; set; }
            /// <summary></summary>
            
            
            
            public int? TownshipId { get; set; }
            /// <summary></summary>
            
            
            
            public int? CountyId { get; set; }
            /// <summary></summary>
            
            
            
            public string SurfaceSurvey { get; set; }
            /// <summary></summary>
            
            
            
            public int? WellSerialNumber { get; set; }
            /// <summary></summary>
            
            
            
            public DateTime? TurnedOvertoCompletionsDate { get; set; }
            /// <summary></summary>
            
            
            
            public double? CurrentDepth { get; set; }
            /// <summary></summary>
            
            
            
            public double? StartDepthPlan { get; set; }
            /// <summary></summary>
            
            
            
            public double? EndDepthPlan { get; set; }
            /// <summary></summary>
            
            
            
            public int? ActualFracStagesCompleted { get; set; }
            /// <summary></summary>
            
            
            
            public int? PlannedFracStages { get; set; }
            /// <summary></summary>
            
            
            
            public int? NumberOfPlugsDrilled { get; set; }
            /// <summary></summary>
            
            
            
            [DecimalPrecision(10, 10)]public decimal? PercentOfPlugsDrilled { get; set; }
            /// <summary></summary>
            
            
            
            [DecimalPrecision(8, 2)]public decimal? CompletedLateralLength { get; set; }
            /// <summary></summary>
            
            
            
            public string FracPlugNumber { get; set; }
            /// <summary></summary>
            
            
            
            public DateTime? ActualStartDate { get; set; }
            /// <summary></summary>
            
            
            
            public DateTime? ActualFinishDate { get; set; }
            /// <summary></summary>
            
            
            
            public string ReserveStatus { get; set; }
            /// <summary></summary>
            
            
            
            public string ReserveCat { get; set; }
            /// <summary></summary>
            
            
            
            public string Comments { get; set; }
            /// <summary></summary>
            
            
            
            public int? TesterTypeId { get; set; }
            /// <summary></summary>
            
            
            
            public int? RegulatoryWellTypeId { get; set; }
            /// <summary></summary>
            
            
            
            [DecimalPrecision(11, 10)]public decimal? PreliminaryNetWorkingInterest { get; set; }
            /// <summary></summary>
            
            
            
            [DecimalPrecision(11, 10)]public decimal? PreliminaryNetRevenueInterest { get; set; }
            /// <summary></summary>
            
            
            
            [DecimalPrecision(11, 10)]public decimal? EstimatedNetWorkingInterest { get; set; }
            /// <summary></summary>
            
            
            
            [DecimalPrecision(11, 10)]public decimal? EstimatedNetRevenueInterest { get; set; }

        /*
        /// <summary>FK_ChangeRequestWells_Wells</summary> 
         [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")] 
         public virtual ICollection<ChangeRequestWell> ChangeRequestWells_Well { get; set; }
            
        /// <summary>FK_DrillGroupWells_Wells</summary> 
         [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")] 
         public virtual ICollection<DrillGroupWell> DrillGroupWells_Well { get; set; }
            
        /// <summary>FK_EconomicsCalculationsAnnualValues_Well</summary> 
         [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")] 
         public virtual ICollection<EconomicsCalculationsAnnualValue> EconomicsCalculationsAnnualValues_Well { get; set; }
            
        /// <summary>FK_EconomicsCalculationsDailyValues_Well</summary> 
         [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")] 
         public virtual ICollection<EconomicsCalculationsDailyValue> EconomicsCalculationsDailyValues_Well { get; set; }
            
        /// <summary>FK_ForecastHorizontalDetails_Wells</summary> 
         [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")] 
         public virtual ICollection<ForecastHorizontalDetail> ForecastHorizontalDetails_Well { get; set; }
            
        /// <summary>FK_ForecastWellHeader_Wells</summary> 
         [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")] 
         public virtual ICollection<ForecastParameter> ForecastParameter_Well { get; set; }
            
        /// <summary>FK_FracGroupWells_Wells</summary> 
         [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")] 
         public virtual ICollection<FracGroupWell> FracGroupWells_Well { get; set; }
            
        /// <summary>FK_ProductionGroupWells_Wells</summary> 
         [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")] 
         public virtual ICollection<ProductionGroupWell> ProductionGroupWells_Well { get; set; }
            
        /// <summary>FK_ProjectCompletionsParameters_Wells</summary> 
         [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")] 
         public virtual ICollection<ProjectCompletionsParameter> ProjectCompletionsParameters_Well { get; set; }
            
        /// <summary>FK_ProjectDrillingParameters_Wells</summary> 
         [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")] 
         public virtual ICollection<ProjectDrillingParameter> ProjectDrillingParameters_Well { get; set; }
            
        /// <summary>FK_ScenarioWells_Wells</summary> 
         [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")] 
         public virtual ICollection<ScenarioWell> ScenarioWells_Well { get; set; }
            
        /// <summary>FK_ScheduleActivities_Wells</summary> 
         [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")] 
         public virtual ICollection<ScheduleActivity> ScheduleActivities_Well { get; set; }
            
        /// <summary>FK_Wells_AreaTeams</summary>
        [ForeignKey("AreaTeamId")]
        public virtual AreaTeam AreaTeam { get; set; }
        /// <summary>FK_Wells_Assets</summary>
        [ForeignKey("AssetId")]
        public virtual Asset Asset { get; set; }
        /// <summary>FK_Wells_BusinessAssociates</summary>
        [ForeignKey("BusinessAssociateId")]
        public virtual BusinessAssociate BusinessAssociate { get; set; }
        /// <summary>FK_Wells_CompletionDesigns_CompletionDesignId</summary>
        [ForeignKey("CompletionDesignId")]
        public virtual CompletionDesign CompletionDesign { get; set; }
        /// <summary>FK_Wells_CompletionsAreaTeams_CompletionsAreaTeamId</summary>
        [ForeignKey("CompletionsAreaTeamId")]
        public virtual CompletionsAreaTeam CompletionsAreaTeam { get; set; }
        /// <summary>FK_Wells_Counties</summary>
        [ForeignKey("CountyId")]
        public virtual County County { get; set; }
        /// <summary>FK_Wells_DrillDesigns_DrillDesignId</summary>
        [ForeignKey("DrillDesignId")]
        public virtual DrillDesign DrillDesign { get; set; }
        /// <summary>FK_Wells_DrillDirections</summary>
        [ForeignKey("DrillDirectionId")]
        public virtual DrillDirection DrillDirection { get; set; }
        /// <summary>FK_Wells_DrillingAreaTeams_DrillingAreaTeamId</summary>
        [ForeignKey("DrillingAreaTeamId")]
        public virtual DrillingAreaTeam DrillingAreaTeam { get; set; }
        /// <summary>FK_Wells_FieldDevelopmentTeams</summary>
        [ForeignKey("FieldDevelopmentTeamId")]
        public virtual FieldDevelopmentTeam FieldDevelopmentTeam { get; set; }
        /// <summary>FK_Wells_Pads</summary>
        [ForeignKey("PadId")]
        public virtual Pad Pad { get; set; }
        /// <summary>FK_Wells_PermitTypes</summary>
        [ForeignKey("PermitTypeId")]
        public virtual PermitType PermitType { get; set; }
        /// <summary>FK_Wells_PriorityRankingCategories</summary>
        [ForeignKey("PriorityRankingCategoryId")]
        public virtual PriorityRankingCategory PriorityRankingCategory { get; set; }
        /// <summary>FK_Wells_RegulatoryWellTypes</summary>
        [ForeignKey("RegulatoryWellTypeId")]
        public virtual RegulatoryWellType RegulatoryWellType { get; set; }
        /// <summary>FK_Wells_RigRampStatuses</summary>
        [ForeignKey("RigRampStatusId")]
        public virtual RigRampStatus RigRampStatus { get; set; }
        /// <summary>FK_Wells_SaltWaterDisposalFacilities</summary>
        [ForeignKey("SaltWaterDisposalFacilityId")]
        public virtual SaltWaterDisposalFacility SaltWaterDisposalFacility { get; set; }
        /// <summary>FK_Wells_StackingStrategies</summary>
        [ForeignKey("StackingStrategyId")]
        public virtual StackingStrategy StackingStrategy { get; set; }
        /// <summary>FK_Wells_States</summary>
        [ForeignKey("StateId")]
        public virtual State State { get; set; }
        /// <summary>FK_Wells_TankBatteries</summary>
        [ForeignKey("TankBatteryId")]
        public virtual TankBattery TankBattery { get; set; }
        /// <summary>FK_Wells_TargetFormations</summary>
        [ForeignKey("TargetFormationId")]
        public virtual TargetFormation TargetFormation { get; set; }
        /// <summary>FK_Wells_TesterTypes</summary>
        [ForeignKey("TesterTypeId")]
        public virtual TesterType TesterType { get; set; }
        /// <summary>FK_Wells_Townships</summary>
        [ForeignKey("TownshipId")]
        public virtual Township Township { get; set; }
        /// <summary>FK_Wells_TypeCurveAreas</summary>
        [ForeignKey("TypeCurveAreaId")]
        public virtual TypeCurveArea TypeCurveArea { get; set; }
        /// <summary>FK_Wells_TypeCurves</summary>
        [ForeignKey("TypeCurveId")]
        public virtual TypeCurve TypeCurve { get; set; }
        /// <summary>FK_Wells_UserRankingCategories</summary>
        [ForeignKey("UserRankingCategoryId")]
        public virtual UserRankingCategory UserRankingCategory { get; set; }
        /// <summary>FK_Wells_WellDesign</summary>
        [ForeignKey("WellDesignId")]
        public virtual WellDesign WellDesign { get; set; }
        /// <summary>FK_Wells_WellProfiles</summary>
        [ForeignKey("WellProfileId")]
        public virtual WellProfile WellProfile { get; set; }
        /// <summary>FK_Wells_WellStatuses</summary>
        [ForeignKey("WellStatusId")]
        public virtual WellStatus WellStatus { get; set; }
        /// <summary>FK_Wells_WellTypes</summary>
        [ForeignKey("WellTypeId")]
        public virtual WellType WellType { get; set; }
        /// <summary>FK_Wells_DevAreas</summary>
        [ForeignKey("DevelopmentAreaId")]
        public virtual Area DevelopmentArea { get; set; }
        /// <summary>FK_Wells_PWMAreas</summary>
        [ForeignKey("PioneerWaterManagementAreaId")]
        public virtual Area PioneerWaterManagementArea { get; set; }
        /// <summary>FK_Wells_CompletionDesigns</summary>
        [ForeignKey("StandardCompletionDesignId")]
        public virtual CompletionDesign StandardCompletionDesign { get; set; }
        /// <summary>FK_Wells_DrillDesigns</summary>
        [ForeignKey("StandardDrillDesignId")]
        public virtual DrillDesign StandardDrillDesign { get; set; }
        /// <summary>FK_Wells_TBAreas</summary>
        [ForeignKey("TankBatteryAreaId")]
        public virtual Area TankBatteryArea { get; set; }
        /// <summary>FK_Wells_WDSAreas</summary>
        [ForeignKey("WaterDisposalSystemAreaId")]
        public virtual Area WaterDisposalSystemArea { get; set; }
        */
    }
}
